import mediapipe as mp
import math
import cv2
import numpy as np
import time
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
import HandTrackingModule as htm
from ctypes import cast, POINTER
from comtypes import CLSCTX_ALL
device = AudioUtilities.GetSpeakers()
interface = device.Activate(
    IAudioEndpointVolume._iid_, CLSCTX_ALL, None
)

volume = cast(interface, POINTER(IAudioEndpointVolume))
vol_range=volume.GetVolumeRange()
minvol=vol_range[0]
maxvol=vol_range[1]


wcam=640
hcam=480
cap=cv2.VideoCapture(0)
cap.set(3,wcam)
cap.set(4,hcam)
detector=htm.handDetector(detection_con=0.85)
prev_time=0
vol_bar=0
length=0
while True:
    ret,frame=cap.read()
    
    curr_time=time.time()
    fps=1/(curr_time-prev_time)
    prev_time=curr_time
    detector.findHands(frame)
    lmList=detector.findPOSI(frame,draw=False)
    if len(lmList)!=0:
        
        x1,y1=lmList[4][1],lmList[4][2]
        x2,y2=lmList[8][1],lmList[8][2]
        cx,cy=(x1+x2)//2,(y1+y2)//2
        cv2.circle(frame,(x1,y1),12,(255,0,0),-1)
        cv2.circle(frame,(x2,y2),12,(255,0,0),-1)
        cv2.circle(frame,(cx,cy),10,(255,0,255),-1)
        cv2.line(frame,(x1,y1),(x2,y2),(255,0,255),3)
        length=math.hypot(x2-x1,y2-y1)# 30-400
        print(length)
        vol=np.interp(length,[35,240],[minvol,maxvol])
        volume.SetMasterVolumeLevel(vol,None)
        
        cv2.putText(frame,f'fps:{int(fps)}',(10,70),cv2.FONT_HERSHEY_PLAIN,3,(255,0,255),3)
        if length<35:
            cv2.circle(frame,(cx,cy),10,(0,255,0),-1)
        
        
    cv2.imshow('frame',frame)
    if cv2.waitKey(1)==ord('q'):
        break
cap.release
